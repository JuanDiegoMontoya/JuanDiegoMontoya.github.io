<title>Home</title>
<h1>Lorum Ipsum</h1>
<p>
  In publishing and graphic design, Lorem ipsum is a placeholder text commonly 
  used to demonstrate the visual form of a document or a typeface without relying 
  on meaningful content. Lorem ipsum may be used before final copy is available, 
  but it may also be used to temporarily replace copy in a process called 
  greeking, which allows designers to consider form without the meaning of the 
  text influencing the design. Lorem ipsum is typically a corrupted version of De 
  finibus bonorum et malorum, a first-century BC text by the Roman statesman and 
  philosopher Cicero, with words altered, added, and removed to make it 
  nonsensical, improper Latin. Versions of the Lorem ipsum text have been used in 
  typesetting at least since the 1960s, when it was popularized by advertisements 
  for Letraset transfer sheets. Lorem ipsum was introduced to the digital world 
  in the mid-1980s when Aldus employed it in graphic and word-processing 
  templates for its desktop publishing program PageMaker. Other popular word 
  processors including Pages and Microsoft Word have since adopted Lorem ipsum 
  as well.
</p>
<pre><code class="language-glsl">
#version 460 core
#define NUM_BUCKETS 128
#define LOCAL_X 16
#define LOCAL_Y 8
#define LOCAL_Z 1
#define WORKGROUPSIZE LOCAL_X * LOCAL_Y * LOCAL_Z

layout(location = 0) uniform sampler2D u_hdrBuffer;
layout(location = 1) uniform float u_logLowLum;
layout(location = 2) uniform float u_logMaxLum;

layout(std430, binding = 0) coherent restrict buffer Histogram
{
  int buckets[NUM_BUCKETS];
}histogram;

float map(float val, float r1s, float r1e, float r2s, float r2e)
{
  return (val - r1s) / (r1e - r1s) * (r2e - r2s) + r2s;
}

uint colorToBucket(vec3 color)
{
  float luminance = dot(color, vec3(.3, .59, .11));
  if (luminance < .0001)
    return 0;
  return clamp(int(map(log(luminance), u_logLowLum, u_logMaxLum, 0.0, float(NUM_BUCKETS - 1))), 0, NUM_BUCKETS - 1);
}

shared int shared_buckets[NUM_BUCKETS];

layout (local_size_x = LOCAL_X, local_size_y = LOCAL_Y, local_size_z = LOCAL_Z) in;
void main()
{
  shared_buckets[gl_LocalInvocationIndex] = 0;
  
  barrier();
  memoryBarrierShared();

  uvec2 texSize = textureSize(u_hdrBuffer, 0);
  uvec2 upscaleFactor = texSize / (gl_NumWorkGroups.xy * gl_WorkGroupSize.xy);
  uvec2 coords = gl_GlobalInvocationID.xy * upscaleFactor;
  if (!any(greaterThanEqual(coords, texSize)))
  {
    vec3 color = texelFetch(u_hdrBuffer, ivec2(coords), 0).rgb;
    uint bucket = colorToBucket(color);
    atomicAdd(shared_buckets[bucket], 1);
  }

  barrier();
  memoryBarrierShared();

  atomicAdd(histogram.buckets[gl_LocalInvocationIndex], shared_buckets[gl_LocalInvocationIndex]);
}
  </code></pre>
  <p>
  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque dapibus 
  congue eleifend. Nunc vulputate, ligula non pharetra vestibulum, justo dolor 
  dignissim erat, non blandit diam tellus ut diam. Sed mollis lorem tincidunt 
  arcu porta varius. Maecenas posuere porttitor nisi, ultrices finibus augue 
  gravida ac. Suspendisse potenti. Nam placerat purus vitae ex feugiat pretium. 
  Pellentesque in felis nec est convallis auctor a rutrum metus. Quisque congue 
  auctor lectus eget egestas. Quisque faucibus tellus velit, et commodo tellus 
  egestas non. Integer efficitur posuere magna sed consectetur. Etiam hendrerit 
  enim finibus congue rhoncus. Nam non nibh eget justo tempus interdum. Nullam 
  sodales, urna ac tristique varius, neque justo porttitor nisi, non euismod erat 
  ante ac lorem. Phasellus consequat nulla eros, eu placerat erat accumsan vitae. 
  In et ultricies mi. Maecenas ut maximus magna.
</p>
<p>
  Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque dapibus 
  congue eleifend. Nunc vulputate, ligula non pharetra vestibulum, justo dolor 
  dignissim erat, non blandit diam tellus ut diam. Sed mollis lorem tincidunt 
  arcu porta varius. Maecenas posuere porttitor nisi, ultrices finibus augue 
  gravida ac. Suspendisse potenti. Nam placerat purus vitae ex feugiat pretium. 
  Pellentesque in felis nec est convallis auctor a rutrum metus. Quisque congue 
  auctor lectus eget egestas. Quisque faucibus tellus velit, et commodo tellus 
  egestas non. Integer efficitur posuere magna sed consectetur. Etiam hendrerit 
  enim finibus congue rhoncus. Nam non nibh eget justo tempus interdum. Nullam 
  sodales, urna ac tristique varius, neque justo porttitor nisi, non euismod erat 
  ante ac lorem. Phasellus consequat nulla eros, eu placerat erat accumsan vitae. 
  In et ultricies mi. Maecenas ut maximus magna.
</p>